List.jsp

========= 검색 폼 ================ 최상단에 위치
<form action="">
	<select name="filter" id="">
        <option value="전체">전체</option>
        <option value="서버">서버</option>
        <option value="대관">대관</option>
        <option value="수강">수강</option>
        <option value="게시판">게시판</option>
        <option value="공지">공지</option>
      </select> 
	
		<input type="text" name = "keyword" value = "${param.filter }"/>
	
	<input type="submit"  value="검색"/>
</form>

==============================================================

NoticeSearch.class

package support.notice.service;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import support.SupportService;
import support.notice.model.NoticeDAO;

public class NoticeSearch implements SupportService{

	@Override
	public void execute(HttpServletRequest request, HttpServletResponse response) {
		
		String filter = request.getParameter("filter");
		
		String keyword = request.getParameter("keyword");
		
		int page = (int)request.getAttribute("nowPage");
		
		int limit =8; // 한 페이지당 게시글 수
		int pageLimit = 4; // 페이지 번호 갯수
		
		NoticeDAO dao = new NoticeDAO();
		
		int total = 0; 
		
		if(filter.equals("전체")) {
			total = dao.totalCntSearch(keyword);
		}else {
			total = dao.totalCntSearch(filter, keyword);
		}
		
		int pageTotal = total/limit;
		
		if(total%limit > 0) {
			pageTotal++;
		}
		
		int start = (page-1)*limit;
		
		int pageStart = (page-1)/pageLimit*pageLimit+1;
		
		int pageEnd = pageStart+pageLimit-1;
		if(pageEnd>pageTotal) {
			pageEnd = pageTotal;
		}
		
		Object data = null;
		if(filter.equals("전체")) {
			data = dao.search(start, limit, keyword);
		}else {
			data = dao.search(start, limit, filter, keyword);
		}
		
		request.setAttribute("mainData", data);
		request.setAttribute("mainUrl", NOTICE+"Search");
		
		request.setAttribute("start", start);
		request.setAttribute("pageTotal", pageTotal);
		request.setAttribute("pageStart", pageStart);
		request.setAttribute("pageEnd", pageEnd);
		
	}

}

===============================================================================
DAO class

추가 메서드 

public int totalCntSearch(String filter, String keyword){
			
			sql = "select count(*) from notice where filter = ? and title like ? ";
			
			try {
				ptmt = con.prepareStatement(sql);
				ptmt.setString(1,filter);
				ptmt.setString(2,"%"+keyword+"%");
				rs = ptmt.executeQuery();
				
				rs.next();
				
				return rs.getInt(1);
			}catch(Exception e) {
				e.printStackTrace();
			}
			
			return 0;
		}
==================================================================================		


		public int totalCntSearch(String keyword){
			
			sql = "select count(*) from notice where title like ? ";
			
			try {
				ptmt = con.prepareStatement(sql);
				ptmt.setString(1,"%"+keyword+"%");
				rs = ptmt.executeQuery();
				
				rs.next();
				
				return rs.getInt(1);
			}catch(Exception e) {
				e.printStackTrace();
			}
			
			return 0;
		}

==================================================================================

public ArrayList<NoticeDTO> search(int start, int limit, String filter, String keyword){
			ArrayList<NoticeDTO> res = new ArrayList<>();
			
			sql = "select * from notice where filter = ? and title like ? order by no desc limit ?, ?";
			
			try {
				ptmt = con.prepareStatement(sql);
				ptmt.setString(1,filter);
				ptmt.setString(2,keyword);
				ptmt.setInt(3,start);
				ptmt.setInt(4, limit);
				rs = ptmt.executeQuery();
				
				while(rs.next()) {
					NoticeDTO dto = new NoticeDTO();
					// 필요한것만 보이기
					dto.setId(rs.getString("id"));
					dto.setTitle(rs.getString("title"));
					dto.setContent(rs.getString("content"));
					dto.setFilter(rs.getString("filter"));
					dto.setReg_date(rs.getTimestamp("reg_date"));
					
					
					res.add(dto);
				}
			}catch(Exception e) {
				e.printStackTrace();
			}finally {
				close();
			}
			
			return res;
		}
===================================================================================================
	
		public ArrayList<NoticeDTO> search(int start, int limit, String keyword){
			ArrayList<NoticeDTO> res = new ArrayList<>();
			sql = "select * from notice where title like ? order by no desc limit ?, ?";
			
			try {
				ptmt = con.prepareStatement(sql);
				ptmt.setString(1, "%"+keyword+"%");
				ptmt.setInt(2,start);
				ptmt.setInt(3, limit);
				rs = ptmt.executeQuery();
				
				while(rs.next()) {
					NoticeDTO dto = new NoticeDTO();
					// 필요한것만 보이기
					dto.setId(rs.getString("id"));
					dto.setTitle(rs.getString("title"));
					dto.setContent(rs.getString("content"));
					dto.setFilter(rs.getString("filter"));
					dto.setReg_date(rs.getTimestamp("reg_date"));
					
					
					res.add(dto);
				}
			}catch(Exception e) {
				e.printStackTrace();
			}finally {
				close();
			}
			
			return res;
		}

==========================================================================================
Search.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>

<h1>공지사항</h1>


<form action="">
	<select name="filter" id="">
        <option value="전체">전체</option>
        <option value="서버">서버</option>
        <option value="대관">대관</option>
        <option value="수강">수강</option>
        <option value="게시판">게시판</option>
        <option value="공지">공지</option>
      </select> 
	
		<input type="text" name = "keyword" value = "${param.filter }"/>
	
	<input type="submit"  value="검색"/>
</form>

<table id = notice_table> 

	
	<c:forEach var="dto" items="${mainData }" varStatus="no">
		
	<tr>
<%-- 		<td>${ start + no.index+1}</td> --%>
		<td class = "notice_title">
			<a href="<c:url value="Detail?id=${dto.id }&page=${nowPage }"/>">${dto.title }</a>
		</td>
		<td class = "notice_filter">${dto.filter }</td>
		<td  class = "notice_date">
		<fmt:formatDate value="${dto.reg_date }" pattern="yy-MM-dd"/>
		</td>
	</tr>
	
	</c:forEach>
	<tr>
		<td colspan="5" align="center">
			<c:if test="${pageStart > 1 }">
				<a href="<c:url value="Search?page=${pageStart-1 }&filter=${param.filter }&keyword=${param.keyword }"/>">[이전]</a>
			</c:if>
			<c:forEach var ="i" begin="${pageStart }" end="${pageEnd }" step="1">
				<c:choose>
					<c:when test="${nowPage == i }">
							[${i }]
					</c:when>		
					
					<c:otherwise>
					<a href="<c:url value="Search?page=${i }&filter=${param.filter }&keyword=${param.keyword }"/>">${i }</a>
					</c:otherwise>		
				</c:choose>
				
				
				
			</c:forEach>
			
			<c:if test="${pageEnd<pageTotal }">
			<a href="<c:url value="Search?page=${pageEnd+1 }&filter=${param.filter }&keyword=${param.keyword }"/>">[다음]</a>
			</c:if>
		</td>
	</tr>
	<tr>
		<td colspan="5" align="right">
			<a href="<c:url value="InsertForm?page=${nowPage }"/>">글쓰기</a>
		</td>
	</tr>
</table>
